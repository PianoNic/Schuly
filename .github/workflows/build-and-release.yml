name: Build and Release Flutter Apps

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.x'
          channel: 'stable'
          cache: true

      - name: Setup release keystore
        working-directory: ./schuly/android
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "Setting up release keystore from secrets..."
          if [ -n "$KEYSTORE_BASE64" ]; then
            echo "Using existing keystore from secrets"
            echo "$KEYSTORE_BASE64" | base64 -d > app-release.jks
          else
            echo "Generating new keystore (consider storing it as KEYSTORE_BASE64 secret)"
            keytool -genkey -v -keystore app-release.jks -keyalg RSA -keysize 2048 -validity 10000 -alias release \
              -dname "CN=Schuly App, OU=Development, O=Schuly, L=Ruebliland, S=Aargau, C=CH" \
              -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" -noprompt
          fi

      - name: Create key.properties
        working-directory: ./schuly/android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "Creating key.properties file..."
          cat > key.properties << EOF
          storePassword=$KEYSTORE_PASSWORD
          keyPassword=$KEY_PASSWORD
          keyAlias=release
          storeFile=../app-release.jks
          EOF

      - name: Get dependencies
        working-directory: ./schuly
        run: flutter pub get

      - name: Generate app icons
        working-directory: ./schuly
        run: dart run flutter_launcher_icons

      - name: Build Android APK
        working-directory: ./schuly
        env:
          SENTRY_DSN: ${{ vars.SENTRY_URL }}
        run: |
          flutter build apk --release \
            --build-name="${{ github.ref_name }}" \
            --build-number="${{ github.run_number }}" \
            --dart-define=SENTRY_DSN="$SENTRY_DSN" \
            --dart-define=SENTRY_RELEASE="${{ github.ref_name }}" \
            --dart-define=SENTRY_ENVIRONMENT="production"

      - name: Build Android AAB (App Bundle)
        working-directory: ./schuly
        env:
          SENTRY_DSN: ${{ vars.SENTRY_URL }}
        run: |
          flutter build appbundle --release \
            --build-name="${{ github.ref_name }}" \
            --build-number="${{ github.run_number }}" \
            --dart-define=SENTRY_DSN="$SENTRY_DSN" \
            --dart-define=SENTRY_RELEASE="${{ github.ref_name }}" \
            --dart-define=SENTRY_ENVIRONMENT="production"

      - name: Prepare artifacts
        working-directory: ./schuly
        run: |
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/app-release.apk artifacts/schuly-${{ github.ref_name }}.apk
          cp build/app/outputs/bundle/release/app-release.aab artifacts/schuly-${{ github.ref_name }}.aab

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: schuly/artifacts/

  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.x'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        working-directory: ./schuly
        run: flutter pub get

      - name: Generate app icons
        working-directory: ./schuly
        run: dart run flutter_launcher_icons

      - name: Build iOS (unsigned)
        working-directory: ./schuly
        env:
          SENTRY_DSN: ${{ vars.SENTRY_URL }}
        run: |
          flutter build ios --release --no-codesign \
            --build-name="${{ github.ref_name }}" \
            --build-number="${{ github.run_number }}" \
            --dart-define=SENTRY_DSN="$SENTRY_DSN" \
            --dart-define=SENTRY_RELEASE="${{ github.ref_name }}" \
            --dart-define=SENTRY_ENVIRONMENT="production"

      - name: Create iOS Archive
        working-directory: ./schuly
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination generic/platform=iOS -archivePath build/Runner.xcarchive archive CODE_SIGNING_ALLOWED=NO

      - name: Export iOS IPA
        working-directory: ./schuly
        run: |
          cd ios
          mkdir -p artifacts
          mkdir -p build/ipa
          cp -r build/Runner.xcarchive/Products/Applications/Runner.app build/ipa/
          cd build/ipa
          zip -r ../../artifacts/schuly-${{ github.ref_name }}.ipa Runner.app

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: schuly/ios/artifacts/

  upload-to-release:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Upload Assets to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android-build/schuly-${{ github.ref_name }}.apk
            android-build/schuly-${{ github.ref_name }}.aab
            ios-build/schuly-${{ github.ref_name }}.ipa
          append_body: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}